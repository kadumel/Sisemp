@model Contexto.Models.CRD

@{
    ViewBag.Title = "Novo";
}
<br/>
<h2>Cadastro Receita e Despesa</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CODIGO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CODIGO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CODIGO, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.CODIGO_PAI, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("CODIGO", String.Empty)*@
                @*@Html.DropDownList("CODIGO", (IEnumerable<SelectListItem>)ViewBag.CODIGO, "Select CODIGO")*@
                @Html.EditorFor(model => model.CODIGO_PAI, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CODIGO_PAI, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NOME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NOME, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NOME, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "ListCrd")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
